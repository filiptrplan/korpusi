# serializer version: 1
# name: TestAdvancedProcessors.test_contour_processor
  dict({
    'measure_starts': list([
      0,
      2,
      4,
      6,
      8,
      10,
      12,
      14,
      16,
      18,
      20,
      22,
      24,
      27,
      29,
      32,
      34,
      36,
      38,
      40,
      42,
      44,
      46,
      48,
      50,
      52,
      54,
      56,
      58,
      60,
      62,
      65,
      66,
    ]),
    'melodic_contour_string': 'D U D U S S D S D U D U S S D U D U D U S S D S S D U D U U D U D U U S D U D S S D U S D U D S S D U S D U D S S D U S D S U D U D ',
    'melodic_contour_string_absolute': '67 64 67 64 67 67 67 65 65 62 65 62 65 65 65 64 67 64 67 64 67 67 67 65 65 65 62 65 62 65 67 62 65 64 67 72 72 67 71 69 69 69 65 71 71 65 69 67 67 67 64 69 69 64 67 65 65 65 62 67 67 65 65 67 62 65 64',
    'melodic_contour_string_relative': '-3 3 -3 3 0 0 -2 0 -3 3 -3 3 0 0 -1 3 -3 3 -3 3 0 0 -2 0 0 -3 3 -3 3 2 -5 3 -1 3 5 0 -5 4 -2 0 0 -4 6 0 -6 4 -2 0 0 -3 5 0 -5 3 -2 0 0 -3 5 0 -2 0 2 -5 3 -1',
  })
# ---
# name: TestAdvancedProcessors.test_pitch_ngram_processor
  dict({
    'frequency_histogram': dict({
      'M+2 P-4 m+3': 2,
      'M+2 P-4 m+3 M-2': 2,
      'M+3 M-3 M+3': 3,
      'M+3 M-3 M+3 P+1': 2,
      'M+3 M-3 M+3 P+1 P+1': 2,
      'M+3 M-3 M+3 P+1 P+1 M-2': 2,
      'M+3 M-3 M+3 P+1 P+1 M-2 P+1': 2,
      'M+3 P+1 P+1': 2,
      'M+3 P+1 P+1 M-2': 2,
      'M+3 P+1 P+1 M-2 P+1': 2,
      'M-2 P+1 P+1': 3,
      'M-2 P+1 P+1 m-3': 3,
      'M-2 P+1 P+1 m-3 P+4': 2,
      'M-2 P+1 P+1 m-3 P+4 P+1': 2,
      'M-3 M+3 M-3': 2,
      'M-3 M+3 M-3 M+3': 2,
      'M-3 M+3 M-3 M+3 P+1': 2,
      'M-3 M+3 M-3 M+3 P+1 P+1': 2,
      'M-3 M+3 M-3 M+3 P+1 P+1 M-2': 2,
      'M-3 M+3 M-3 M+3 P+1 P+1 M-2 P+1': 2,
      'M-3 M+3 P+1': 2,
      'M-3 M+3 P+1 P+1': 2,
      'M-3 M+3 P+1 P+1 M-2': 2,
      'M-3 M+3 P+1 P+1 M-2 P+1': 2,
      'P+1 M-2 P+1': 3,
      'P+1 P+1 M-2': 3,
      'P+1 P+1 M-2 P+1': 2,
      'P+1 P+1 m-3': 3,
      'P+1 P+1 m-3 P+4': 2,
      'P+1 P+1 m-3 P+4 P+1': 2,
      'P+1 P-4 m+3': 2,
      'P+1 m-3 P+4': 2,
      'P+1 m-3 P+4 P+1': 2,
      'P+1 m-3 m+3': 2,
      'P+1 m-3 m+3 m-3': 2,
      'P+1 m-3 m+3 m-3 m+3': 2,
      'P+4 P+1 P-4': 3,
      'P+4 P+1 P-4 m+3': 2,
      'P-4 m+3 M-2': 3,
      'm+3 m-3 m+3': 2,
      'm-3 P+4 P+1': 2,
      'm-3 m+3 m-3': 2,
      'm-3 m+3 m-3 m+3': 2,
    }),
  })
# ---
# name: TestAdvancedProcessors.test_rhythm_ngram_processor
  dict({
    'frequency_histogram': dict({
      '1/1 1/2 1/1': 25,
      '1/1 1/2 1/1 1/2': 25,
      '1/1 1/2 1/1 1/2 1/1': 23,
      '1/1 1/2 1/1 1/2 1/1 1/2': 23,
      '1/1 1/2 1/1 1/2 1/1 1/2 1/1': 21,
      '1/1 1/2 1/1 1/2 1/1 1/2 1/1 1/2': 21,
      '1/1 1/2 1/1 1/2 1/1 1/2 1/1 1/2 1/1': 19,
      '1/1 1/2 1/1 1/2 1/1 1/2 1/1 1/2 1/2': 2,
      '1/1 1/2 1/1 1/2 1/1 1/2 1/2': 2,
      '1/1 1/2 1/1 1/2 1/1 1/2 1/2 1/2': 2,
      '1/1 1/2 1/1 1/2 1/1 1/2 1/2 1/2 1/2': 2,
      '1/1 1/2 1/1 1/2 1/2': 2,
      '1/1 1/2 1/1 1/2 1/2 1/2': 2,
      '1/1 1/2 1/1 1/2 1/2 1/2 1/2': 2,
      '1/1 1/2 1/2': 3,
      '1/1 1/2 1/2 1/2': 3,
      '1/1 1/2 1/2 1/2 1/2': 3,
      '1/1 1/2 1/2 1/2 1/2 1/1': 2,
      '1/1 1/2 1/2 1/2 1/2 1/1 1/2': 2,
      '1/2 1/1 1/2': 27,
      '1/2 1/1 1/2 1/1': 24,
      '1/2 1/1 1/2 1/1 1/2': 24,
      '1/2 1/1 1/2 1/1 1/2 1/1': 22,
      '1/2 1/1 1/2 1/1 1/2 1/1 1/2': 22,
      '1/2 1/1 1/2 1/1 1/2 1/1 1/2 1/1': 20,
      '1/2 1/1 1/2 1/1 1/2 1/1 1/2 1/1 1/2': 20,
      '1/2 1/1 1/2 1/1 1/2 1/1 1/2 1/2': 2,
      '1/2 1/1 1/2 1/1 1/2 1/1 1/2 1/2 1/2': 2,
      '1/2 1/1 1/2 1/1 1/2 1/2': 2,
      '1/2 1/1 1/2 1/1 1/2 1/2 1/2': 2,
      '1/2 1/1 1/2 1/1 1/2 1/2 1/2 1/2': 2,
      '1/2 1/1 1/2 1/2': 3,
      '1/2 1/1 1/2 1/2 1/2': 3,
      '1/2 1/1 1/2 1/2 1/2 1/2': 3,
      '1/2 1/1 1/2 1/2 1/2 1/2 1/1': 2,
      '1/2 1/1 1/2 1/2 1/2 1/2 1/1 1/2': 2,
      '1/2 1/2 1/1': 2,
      '1/2 1/2 1/1 1/2': 2,
      '1/2 1/2 1/2': 6,
      '1/2 1/2 1/2 1/1': 2,
      '1/2 1/2 1/2 1/1 1/2': 2,
      '1/2 1/2 1/2 1/2': 3,
      '1/2 1/2 1/2 1/2 1/1': 2,
      '1/2 1/2 1/2 1/2 1/1 1/2': 2,
    }),
  })
# ---
# name: TestAdvancedProcessors.test_rhythm_processor
  dict({
    'measure_starts': list([
      0,
      2,
      4,
      6,
      8,
      10,
      12,
      14,
      16,
      18,
      20,
      22,
      24,
      27,
      29,
      32,
      34,
      36,
      38,
      40,
      42,
      44,
      46,
      48,
      50,
      52,
      54,
      56,
      58,
      60,
      62,
      65,
      66,
    ]),
    'rhythm_string': '1/1 1/2 1/1 1/2 1/1 1/2 1/1 1/2 1/1 1/2 1/1 1/2 1/1 1/2 1/1 1/2 1/1 1/2 1/1 1/2 1/1 1/2 1/1 1/2 1/2 1/2 1/2 1/1 1/2 1/2 1/2 1/2 1/1 1/2 1/1 1/2 1/1 1/2 1/1 1/2 1/1 1/2 1/1 1/2 1/1 1/2 1/1 1/2 1/1 1/2 1/1 1/2 1/1 1/2 1/1 1/2 1/1 1/2 1/1 1/2 1/1 1/2 1/2 1/2 1/2 3/2 3/2',
  })
# ---
